import Impact_Arrays as imp
import matplotlib.pyplot as plt
import numpy as np

'''------------------------------MONTE CARLO INPUTS--------------------------------------------'''
trials = 10000

'''-------------------------------INVENTORY INPUTS CODE-----------------------------------------'''

"""ESTABLISHMENT PHASE"""
#Establishment Inventory Nuts and Wood (values are placeholders can = list generated by pdf set generator)
nw_pesticide_application_ha_tree = .05 * 2 * np.random.rand(trials)
nw_pesticide_kgai_tree = .012 * 2 * np.random.rand(trials)
nw_urea_kgN_tree = .28 * 2 * np.random.rand(trials)

#Establishment Inventory Hay
hay_Nfertilizer_kg_tree = .25 * 2 * np.random.rand(trials)
hay_P2O5fertilizer_kg_tree = .64 * 2 * np.random.rand(trials)
hay_potassium_chloride_kg_tree = .41 * 2 * np.random.rand(trials)
hay_tillage_ha_tree = .0083 * 2 * np.random.rand(trials)
hay_petrol_seed_delivery_kg_tree = .2 * 2 * np.random.rand(trials)
hay_grass_seed_kg_tree = .25 * 2 * np.random.rand(trials)
hay_mowing_ha_tree = .099 * 2 * np.random.rand(trials)
hay_pesticide_application_ha_tree = .033 * 2 * np.random.rand(trials)

"""PRODUCTION PHASE"""
#Nut and Wood Production
nw_prod_pesticide_application_ha_tree = .41 * 2 * np.random.rand(trials)
nw_prod_pesticide_kg_tree = .12 * 2 * np.random.rand(trials)
nw_prod_urea_kgN_tree = .58 * 2 * np.random.rand(trials)

#Nut Production
nut_prod_harvester_kg_tree = .45 * 2 * np.random.rand(trials)
nut_prod_shaker_kg_tree = .41 * 2 * np.random.rand(trials)
nut_prod_sweeper_kg_tree = .38 * 2 * np.random.rand(trials)
nut_prod_diesel_harvesting_kg_tree = 20 * 2 * np.random.rand(trials)

#Hay Production
hay_prod_mowing_ha_tree = 1.7 * 2 * np.random.rand(trials)
hay_prod_haying_ha_tree = 1.7 * 2 * np.random.rand(trials)
hay_prod_baling_p_tree = 8.5 * 2 * np.random.rand(trials)
hay_prod_bale_loading_p_tree = 37 * 2 * np.random.rand(trials)
hay_prod_petrol_seed_delivery_kg_tree = .2 * 2 * np.random.rand(trials)
hay_prod_grass_seed_kg_tree = .25 * 2 * np.random.rand(trials)

#Wood Destruction
wood_dest_harvesting_hr_tree = .033 * 2 * np.random.rand(trials)


'''-----------------------------SINGLE CROP, SINGLE PHASE IMPACT CALCULATORS---------------------------'''

'''ESTABLISHMENT PHASE'''

#Calculates Nut/Wood Establishment Impact Distributions by Category
def NW_estab_impact_calc():
    OzDep_NW_estab = []
    GWP_NW_estab = []
    Smog_NW_estab = []
    Acid_NW_estab = []
    Eut_NW_estab = []
    Cancer_NW_estab = []
    Non_Cancer_NW_estab = []
    Resp_NW_estab = []
    EcoTox_NW_estab = []
    FuelDep_NW_estab = []

    for i in range(trials):
        nut_estab_impact = nw_pesticide_application_ha_tree[i] * imp.pesticide_application_impact_dict + \
            nw_pesticide_kgai_tree[i] * imp.pesticide_impact_dict + \
            nw_urea_kgN_tree[i] * imp.urea_impact_dict

        OzDep_NW_estab.append(nut_estab_impact[0])
        GWP_NW_estab.append(nut_estab_impact[1])
        Smog_NW_estab.append(nut_estab_impact[2])
        Acid_NW_estab.append(nut_estab_impact[3])
        Eut_NW_estab.append(nut_estab_impact[4])
        Cancer_NW_estab.append(nut_estab_impact[5])
        Non_Cancer_NW_estab.append(nut_estab_impact[6])
        Resp_NW_estab.append(nut_estab_impact[7])
        EcoTox_NW_estab.append(nut_estab_impact[8])
        FuelDep_NW_estab.append(nut_estab_impact[9])

    return OzDep_NW_estab, GWP_NW_estab, Smog_NW_estab, Acid_NW_estab, Eut_NW_estab, Cancer_NW_estab, \
Non_Cancer_NW_estab, Resp_NW_estab, EcoTox_NW_estab, FuelDep_NW_estab


#Calculates Hay Establishment Impact by Category
def hay_estab_impact_calc():
    OzDep_hay_estab = []
    GWP_hay_estab = []
    Smog_hay_estab = []
    Acid_hay_estab = []
    Eut_hay_estab = []
    Cancer_hay_estab = []
    Non_Cancer_hay_estab = []
    Resp_hay_estab = []
    EcoTox_hay_estab = []
    FuelDep_hay_estab = []

    for i in range(trials):
        hay_estab_impact = hay_Nfertilizer_kg_tree[i] * imp.N_fertilizer_impact_dict + \
            hay_P2O5fertilizer_kg_tree[i] * imp.phosphate_fertilizer_impact_dict + \
            hay_potassium_chloride_kg_tree[i] * imp.potassium_chloride_fertilizer_impact_dict + \
            hay_tillage_ha_tree[i] * imp.tillage_impact_dict + \
            hay_petrol_seed_delivery_kg_tree[i] * imp.petrol_impact_dict + \
            hay_grass_seed_kg_tree[i] * imp.grass_seed_impact_dict + \
            hay_mowing_ha_tree[i] * imp.mowing_impact_dict + \
            hay_pesticide_application_ha_tree[i] * imp.pesticide_application_impact_dict

        OzDep_hay_estab.append(hay_estab_impact[0])
        GWP_hay_estab.append(hay_estab_impact[1])
        Smog_hay_estab.append(hay_estab_impact[2])
        Acid_hay_estab.append(hay_estab_impact[3])
        Eut_hay_estab.append(hay_estab_impact[4])
        Cancer_hay_estab.append(hay_estab_impact[5])
        Non_Cancer_hay_estab.append(hay_estab_impact[6])
        Resp_hay_estab.append(hay_estab_impact[7])
        EcoTox_hay_estab.append(hay_estab_impact[8])
        FuelDep_hay_estab.append(hay_estab_impact[9])

    return OzDep_hay_estab, GWP_hay_estab, Smog_hay_estab, Acid_hay_estab, Eut_hay_estab, Cancer_hay_estab, \
               Non_Cancer_hay_estab, Resp_hay_estab, EcoTox_hay_estab, FuelDep_hay_estab


'''PRODUCTION PHASE'''

#Nut/Wood Production Imapct by Category
def NW_prod_impact_calc():

    OzDep_NW_prod = []
    GWP_NW_prod = []
    Smog_NW_prod = []
    Acid_NW_prod = []
    Eut_NW_prod = []
    Cancer_NW_prod = []
    Non_Cancer_NW_prod = []
    Resp_NW_prod = []
    EcoTox_NW_prod = []
    FuelDep_NW_prod = []

    for i in range(trials):
        nw_prod_impact = nw_prod_pesticide_application_ha_tree[i] * imp.pesticide_application_impact_dict + \
            nw_prod_pesticide_kg_tree[i] * imp.pesticide_impact_dict + \
            nw_prod_urea_kgN_tree[i] * imp.urea_impact_dict

        OzDep_NW_prod.append(nw_prod_impact[0])
        GWP_NW_prod.append(nw_prod_impact[1])
        Smog_NW_prod.append(nw_prod_impact[2])
        Acid_NW_prod.append(nw_prod_impact[3])
        Eut_NW_prod.append(nw_prod_impact[4])
        Cancer_NW_prod.append(nw_prod_impact[5])
        Non_Cancer_NW_prod.append(nw_prod_impact[6])
        Resp_NW_prod.append(nw_prod_impact[7])
        EcoTox_NW_prod.append(nw_prod_impact[8])
        FuelDep_NW_prod.append(nw_prod_impact[9])

    return OzDep_NW_prod, GWP_NW_prod, Smog_NW_prod, Acid_NW_prod, Eut_NW_prod, Cancer_NW_prod, \
           Non_Cancer_NW_prod, Resp_NW_prod, EcoTox_NW_prod, FuelDep_NW_prod


#Nut Prdocution Impact by Category
def nut_prod_impact_calc():

    OzDep_nut_prod = []
    GWP_nut_prod = []
    Smog_nut_prod = []
    Acid_nut_prod = []
    Eut_nut_prod = []
    Cancer_nut_prod = []
    Non_Cancer_nut_prod = []
    Resp_nut_prod = []
    EcoTox_nut_prod = []
    FuelDep_nut_prod = []

    for i in range(trials):
        nut_prod_impact = nut_prod_harvester_kg_tree[i] * imp.unspecified_ag_machinery_impact_dict + \
            nut_prod_shaker_kg_tree[i] * imp.unspecified_ag_machinery_impact_dict + \
            nut_prod_sweeper_kg_tree[i] * imp.unspecified_ag_machinery_impact_dict + \
            nut_prod_diesel_harvesting_kg_tree[i] * imp.diesel_impact_dict

        OzDep_nut_prod.append(nut_prod_impact[0])
        GWP_nut_prod.append(nut_prod_impact[1])
        Smog_nut_prod.append(nut_prod_impact[2])
        Acid_nut_prod.append(nut_prod_impact[3])
        Eut_nut_prod.append(nut_prod_impact[4])
        Cancer_nut_prod.append(nut_prod_impact[5])
        Non_Cancer_nut_prod.append(nut_prod_impact[6])
        Resp_nut_prod.append(nut_prod_impact[7])
        EcoTox_nut_prod.append(nut_prod_impact[8])
        FuelDep_nut_prod.append(nut_prod_impact[9])

    return OzDep_nut_prod, GWP_nut_prod, Smog_nut_prod, Acid_nut_prod, Eut_nut_prod, Cancer_nut_prod, \
           Non_Cancer_nut_prod, Resp_nut_prod, EcoTox_nut_prod, FuelDep_nut_prod


#Total Chestnut Tree (nut inventory + NW inventory) Production Impact
def chestnut_tree_prod_impact_calc():
    chestnut_tree_prod_impact = []
    chestnut_tree_prod_impact_category = []

    nw_prod_impact = nut_prod_impact_calc()
    nut_prod_impact = NW_prod_impact_calc()

    for i in range(10):
        for j in range(trials):
            chestnut_tree_prod_impact_trial = nw_prod_impact[i][j] + nut_prod_impact[i][j]
            chestnut_tree_prod_impact_category.append(chestnut_tree_prod_impact_trial)
        chestnut_tree_prod_impact.append(chestnut_tree_prod_impact_category)
        chestnut_tree_prod_impact_category = []

    OzDep_chestnut_tree_prod = chestnut_tree_prod_impact[0]
    GWP_chestnut_tree_prod = chestnut_tree_prod_impact[1]
    Smog_chestnut_tree_prod = chestnut_tree_prod_impact[2]
    Acid_chestnut_tree_prod = chestnut_tree_prod_impact[3]
    Eut_chestnut_tree_prod = chestnut_tree_prod_impact[4]
    Cancer_chestnut_tree_prod = chestnut_tree_prod_impact[5]
    Non_Cancer_chestnut_tree_prod = chestnut_tree_prod_impact[6]
    Resp_chestnut_tree_prod = chestnut_tree_prod_impact[7]
    EcoTox_chestnut_tree_prod = chestnut_tree_prod_impact[8]
    FuelDep_chestnut_tree_prod = chestnut_tree_prod_impact[9]

    return OzDep_chestnut_tree_prod, GWP_chestnut_tree_prod, Smog_chestnut_tree_prod, Acid_chestnut_tree_prod, \
           Eut_chestnut_tree_prod, Cancer_chestnut_tree_prod,\
           Non_Cancer_chestnut_tree_prod, Resp_chestnut_tree_prod, EcoTox_chestnut_tree_prod, FuelDep_chestnut_tree_prod


#Hay Production Impact
def hay_prod_impact_calc():
    OzDep_hay_prod = []
    GWP_hay_prod = []
    Smog_hay_prod = []
    Acid_hay_prod = []
    Eut_hay_prod = []
    Cancer_hay_prod = []
    Non_Cancer_hay_prod = []
    Resp_hay_prod = []
    EcoTox_hay_prod = []
    FuelDep_hay_prod = []

    for i in range(trials):
        hay_prod_impact = hay_prod_mowing_ha_tree[i] * imp.mowing_impact_dict + \
                          hay_prod_haying_ha_tree[i] * imp.haying_impact_dict + \
                          hay_prod_baling_p_tree[i] * imp.baling_impact_dict + \
                          hay_prod_bale_loading_p_tree[i] * imp.bale_loading_impact_dict + \
                          hay_prod_petrol_seed_delivery_kg_tree[i] * imp.petrol_impact_dict + \
                          hay_prod_grass_seed_kg_tree[i] * imp.grass_seed_impact_dict

        OzDep_hay_prod.append(hay_prod_impact[0])
        GWP_hay_prod.append(hay_prod_impact[1])
        Smog_hay_prod.append(hay_prod_impact[2])
        Acid_hay_prod.append(hay_prod_impact[3])
        Eut_hay_prod.append(hay_prod_impact[4])
        Cancer_hay_prod.append(hay_prod_impact[5])
        Non_Cancer_hay_prod.append(hay_prod_impact[6])
        Resp_hay_prod.append(hay_prod_impact[7])
        EcoTox_hay_prod.append(hay_prod_impact[8])
        FuelDep_hay_prod.append(hay_prod_impact[9])

    return OzDep_hay_prod, GWP_hay_prod, Smog_hay_prod, Acid_hay_prod, Eut_hay_prod, Cancer_hay_prod, \
               Non_Cancer_hay_prod, Resp_hay_prod, EcoTox_hay_prod, FuelDep_hay_prod


'''DESTRUCTION PHASE'''
#Wood Destruction Phase Impact
def wood_dest_impact_calc():
    OzDep_wood_dest = []
    GWP_wood_dest = []
    Smog_wood_dest = []
    Acid_wood_dest = []
    Eut_wood_dest = []
    Cancer_wood_dest = []
    Non_Cancer_wood_dest = []
    Resp_wood_dest= []
    EcoTox_wood_dest = []
    FuelDep_wood_dest = []

    for i in range(trials):
        wood_dest_impact = wood_dest_harvesting_hr_tree[i] * imp.tree_harvesting_impact_dict

        OzDep_wood_dest.append(wood_dest_impact[0])
        GWP_wood_dest.append(wood_dest_impact[1])
        Smog_wood_dest.append(wood_dest_impact[2])
        Acid_wood_dest.append(wood_dest_impact[3])
        Eut_wood_dest.append(wood_dest_impact[4])
        Cancer_wood_dest.append(wood_dest_impact[5])
        Non_Cancer_wood_dest.append(wood_dest_impact[6])
        Resp_wood_dest.append(wood_dest_impact[7])
        EcoTox_wood_dest.append(wood_dest_impact[8])
        FuelDep_wood_dest.append(wood_dest_impact[9])

    return OzDep_wood_dest, GWP_wood_dest, Smog_wood_dest, Acid_wood_dest, Eut_wood_dest, Cancer_wood_dest, \
               Non_Cancer_wood_dest, Resp_wood_dest, EcoTox_wood_dest, FuelDep_wood_dest


'''-----------------------------SINGLE PHASE TOTAL IMPACT CALCULATORS (COMBINE ALL CROPS)---------------------------'''

'''ESTABLISHMENT PHASE'''
#calculates total establishment phase impact
def total_estab_impact_calc():
    total_estab_impact = []
    total_estab_impact_category = []

    hay_estab_impact = hay_estab_impact_calc()
    NW_estab_impact = NW_estab_impact_calc()

    for i in range(10):
        for j in range(trials):
            total_estab_impact_trial = hay_estab_impact[i][j] + NW_estab_impact[i][j]
            total_estab_impact_category.append(total_estab_impact_trial)
        total_estab_impact.append(total_estab_impact_category)
        total_estab_impact_category = []


    OzDep_total_estab = total_estab_impact[0]
    GWP_total_estab = total_estab_impact[1]
    Smog_total_estab = total_estab_impact[2]
    Acid_total_estab = total_estab_impact[3]
    Eut_total_estab = total_estab_impact[4]
    Cancer_total_estab = total_estab_impact[5]
    Non_Cancer_total_estab = total_estab_impact[6]
    Resp_total_estab = total_estab_impact[7]
    EcoTox_total_estab = total_estab_impact[8]
    FuelDep_total_estab = total_estab_impact[9]

    return OzDep_total_estab, GWP_total_estab, Smog_total_estab, Acid_total_estab, Eut_total_estab, Cancer_total_estab,\
           Non_Cancer_total_estab, Resp_total_estab, EcoTox_total_estab, FuelDep_total_estab


'''PRODUCTION PHASE'''

#Calculates Total Production Phase Impact
def total_prod_impact_calc():
    total_prod_impact = []
    total_prod_impact_category = []

    chestnut_tree_prod_impact = chestnut_tree_prod_impact_calc()
    hay_prod_impact = hay_prod_impact_calc()

    for i in range(10):
        for j in range(trials):
            total_prod_impact_trial = chestnut_tree_prod_impact[i][j] + hay_prod_impact[i][j]
            total_prod_impact_category.append(total_prod_impact_trial)
        total_prod_impact.append(total_prod_impact_category)
        total_prod_impact_category = []


    OzDep_total_prod = total_prod_impact[0]
    GWP_total_prod = total_prod_impact[1]
    Smog_total_prod = total_prod_impact[2]
    Acid_total_prod = total_prod_impact[3]
    Eut_total_prod = total_prod_impact[4]
    Cancer_total_prod = total_prod_impact[5]
    Non_Cancer_total_prod = total_prod_impact[6]
    Resp_total_prod = total_prod_impact[7]
    EcoTox_total_prod = total_prod_impact[8]
    FuelDep_total_prod = total_prod_impact[9]

    return OzDep_total_prod, GWP_total_prod, Smog_total_prod, Acid_total_prod, Eut_total_prod, Cancer_total_prod,\
           Non_Cancer_total_prod, Resp_total_prod, EcoTox_total_prod, FuelDep_total_prod


'''DESTRUCTION PHASE'''
# Calculates Total Destruction Phase impacts by category
def total_dest_impact_calc():
    total_dest_impact = wood_dest_impact_calc()

    return total_dest_impact


'''-----------------------------SINGLE CROP TOTAL IMPACT CALCULATORS (COMBINE ALL PHASES)---------------------------'''
#calculates Chestnut Tree Impact Totals for All Phases
def total_chestnut_tree_impact_calc():
    total_chestnut_tree_impact = []
    total_chestnut_tree_impact_category = []

    chestnut_tree_prod_impact = chestnut_tree_prod_impact_calc()
    NW_estab_impact = NW_estab_impact_calc()

    for i in range(10):
        for j in range(trials):
            total_chestnut_tree_impact_trial = chestnut_tree_prod_impact[i][j] + NW_estab_impact[i][j]
            total_chestnut_tree_impact_category.append(total_chestnut_tree_impact_trial)
        total_chestnut_tree_impact.append(total_chestnut_tree_impact_category)
        total_chestnut_tree_impact_category = []


    OzDep_total_chestnut_tree = total_chestnut_tree_impact[0]
    GWP_total_chestnut_tree = total_chestnut_tree_impact[1]
    Smog_total_chestnut_tree = total_chestnut_tree_impact[2]
    Acid_total_chestnut_tree = total_chestnut_tree_impact[3]
    Eut_total_chestnut_tree = total_chestnut_tree_impact[4]
    Cancer_total_chestnut_tree = total_chestnut_tree_impact[5]
    Non_Cancer_total_chestnut_tree = total_chestnut_tree_impact[6]
    Resp_total_chestnut_tree = total_chestnut_tree_impact[7]
    EcoTox_total_chestnut_tree = total_chestnut_tree_impact[8]
    FuelDep_total_chestnut_tree = total_chestnut_tree_impact[9]

    return OzDep_total_chestnut_tree, GWP_total_chestnut_tree, Smog_total_chestnut_tree, Acid_total_chestnut_tree, Eut_total_chestnut_tree, Cancer_total_chestnut_tree,\
           Non_Cancer_total_chestnut_tree, Resp_total_chestnut_tree, EcoTox_total_chestnut_tree, FuelDep_total_chestnut_tree


#calculates Hay Impact Totals for All Phases
def total_hay_impact_calc():
    total_hay_impact = []
    total_hay_impact_category = []

    hay_prod_impact = hay_prod_impact_calc()
    hay_estab_impact = hay_estab_impact_calc()

    for i in range(10):
        for j in range(trials):
            total_hay_impact_trial = hay_prod_impact[i][j] + hay_estab_impact[i][j]
            total_hay_impact_category.append(total_hay_impact_trial)
        total_hay_impact.append(total_hay_impact_category)
        total_hay_impact_category = []


    OzDep_total_hay = total_hay_impact[0]
    GWP_total_hay = total_hay_impact[1]
    Smog_total_hay = total_hay_impact[2]
    Acid_total_hay = total_hay_impact[3]
    Eut_total_hay = total_hay_impact[4]
    Cancer_total_hay = total_hay_impact[5]
    Non_Cancer_total_hay = total_hay_impact[6]
    Resp_total_hay = total_hay_impact[7]
    EcoTox_total_hay = total_hay_impact[8]
    FuelDep_total_hay = total_hay_impact[9]

    return OzDep_total_hay, GWP_total_hay, Smog_total_hay, Acid_total_hay, Eut_total_hay, Cancer_total_hay,\
           Non_Cancer_total_hay, Resp_total_hay, EcoTox_total_hay, FuelDep_total_hay


'''-----------------------------WHOLE PLOT IMPACT CALCULATOR (ALL CROPS, ALL PHASES)--------------------------------'''

# Calculates Total Impact of All Plants over all Phases by Category
def total_plot_impact_calc():
    total_plot_impact = []
    total_plot_impact_category = []

    total_prod_impact = total_prod_impact_calc()
    total_estab_impact = total_estab_impact_calc()
    total_dest_impact = total_dest_impact_calc()

    for i in range(10):
        for j in range(trials):
            total_plot_impact_trial = total_prod_impact[i][j] + total_estab_impact[i][j] + total_dest_impact[i][j]
            total_plot_impact_category.append(total_plot_impact_trial)
        total_plot_impact.append(total_plot_impact_category)
        total_plot_impact_category = []

    OzDep_total_plot = total_plot_impact[0]
    GWP_total_plot = total_plot_impact[1]
    Smog_total_plot = total_plot_impact[2]
    Acid_total_plot = total_plot_impact[3]
    Eut_total_plot = total_plot_impact[4]
    Cancer_total_plot = total_plot_impact[5]
    Non_Cancer_total_plot = total_plot_impact[6]
    Resp_total_plot = total_plot_impact[7]
    EcoTox_total_plot = total_plot_impact[8]
    FuelDep_total_plot = total_plot_impact[9]

    return OzDep_total_plot, GWP_total_plot, Smog_total_plot, Acid_total_plot, Eut_total_plot, Cancer_total_plot, \
           Non_Cancer_total_plot, Resp_total_plot, EcoTox_total_plot, FuelDep_total_plot


'''-------------------------BOX PLOT MAKING CODE---------------------------------------------------'''

# Makes Nut/Wood Estab Box Plots
x = total_plot_impact_calc()

fig = plt.figure()
ax0 = fig.add_subplot(2,5,1)
plt.boxplot(x[0])
ax1 = fig.add_subplot(2,5,2)
plt.boxplot(x[1])
ax2 = fig.add_subplot(2,5,3)
plt.boxplot(x[2])
ax3 = fig.add_subplot(2,5,4)
plt.boxplot(x[3])
ax4 = fig.add_subplot(2,5,5)
plt.boxplot(x[4])
ax5 = fig.add_subplot(2,5,6)
plt.boxplot(x[5])
ax6 = fig.add_subplot(2,5,7)
plt.boxplot(x[6])
ax7 = fig.add_subplot(2,5,8)
plt.boxplot(x[7])
ax8 = fig.add_subplot(2,5,9)
plt.boxplot(x[8])
ax9 = fig.add_subplot(2,5,10)
plt.boxplot(x[9])

fig.suptitle('Total Production Impacts')
ax0.title.set_text('Ozone Depletion (kg CFC11 eq)')
ax1.title.set_text('Global Warming Potential (kg CO2 eq)')
ax2.title.set_text('Smog (kg O3 eq)')
ax3.title.set_text('Acidification (kg SO2 eq)')
ax4.title.set_text('Eutrophication (kg N eq)')
ax5.title.set_text('Carcinogenics (CTUh)')
ax6.title.set_text('Non-Carcinogenics (CTUh)')
ax7.title.set_text('Respiratory Effects (kg PM2.5 eq)')
ax8.title.set_text('Ecotoxicity (CTUe)')
ax9.title.set_text('Fossil Fuel Depletion (MJ surplus)')
plt.show()